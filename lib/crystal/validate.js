// Generated by CoffeeScript 1.9.3
(function() {
  var findVersions, validate;

  findVersions = require('find-versions');

  validate = function(config) {
    var field, field_name, fields, results, value;
    config = config || this.config;
    fields = {
      copyright: {
        type: 'string'
      },
      description: {
        type: 'string'
      },
      name: {
        required: true,
        type: 'string'
      },
      version: {
        validate: function(val) {
          if (typeof findVersions(val, {
            loose: true
          })[0] === 'string') {
            return true;
          } else {
            return false;
          }
        },
        required: true,
        type: 'string'
      }
    };
    results = [];
    for (field_name in fields) {
      field = fields[field_name];
      value = config[field_name];
      switch (false) {
        case !(field.required === true && (value === void 0 || value === null)):
          throw new ErrorRequired(field_name);
          break;
        case value === void 0:
          switch (false) {
            case typeof value === field.type:
              throw new ErrorType(field_name, field.type);
              break;
            case !(field.validate && field.validate(value) === false):
              throw new ErrorInvalid(field_name);
              break;
            default:
              results.push(void 0);
          }
          break;
        default:
          results.push(void 0);
      }
    }
    return results;
  };

  module.exports = validate;

}).call(this);
